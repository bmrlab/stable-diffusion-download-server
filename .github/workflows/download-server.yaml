name: File Download Server

on:
  push:
    # branches: [ "main" ]
    tags:
      - v*
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Project
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: setup versioning
      id: vars
      run: |
        commit_short_hash="$(git rev-parse --short HEAD)"
        echo "commit_short_hash=$commit_short_hash" >> $GITHUB_OUTPUT
        echo "build_version=${{ github.ref_name }}" >> $GITHUB_OUTPUT

    - name: Build and push File Download Server
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ghcr.io/bmrlab/stable-diffusion-webui/dl-server:latest
          ghcr.io/bmrlab/stable-diffusion-webui/dl-server:${{ steps.vars.outputs.commit_short_hash }}
          ghcr.io/bmrlab/stable-diffusion-webui/dl-server:${{ steps.vars.outputs.build_version }}
        platforms: linux/amd64

    - name: Install kubectl
      uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBECONFIG_AKS_MUSE_TEST }}

    - name: Deploy to Kubernetes
      run: |
        kubectl set image deployment/download-server download-server=ghcr.io/bmrlab/stable-diffusion-webui/dl-server:${{ steps.vars.outputs.build_version }} -n stable-diffusion

    - name: Verify Kubernetes deployment
      run: |
        kubectl rollout status deploy download-server -n stable-diffusion
